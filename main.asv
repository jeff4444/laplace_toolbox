% main.m
% Entry point for the Laplace and Differential Equation Toolbox

clc; clear;

disp('Welcome to the Laplace and Differential Equation Toolbox');
disp('=========================================================');
option = prompt_input();
switch option
    case 1
        disp('--- Laplace Transform ---');
        syms t s
        expr = input('Enter the time-domain function (in terms of t): ', 's');
        f = str2sym(expr);
        result = laplace_transform(f, t, s);
        fprintf('Laplace Transform: %s\n', char(result));
    
    case 2
        disp('--- Inverse Laplace Transform ---');
        syms t s
        expr = input('Enter the Laplace-domain function (in terms of s): ', 's');
        F = str2sym(expr);
        result = inverse_laplace_transform(F, s, t);
        fprintf('Inverse Laplace Transform: %s\n', char(result));
    
    case 3
        disp('--- Solve Differential Equation ---');
        syms y(t)
        eqn = input('Enter the ODE (use y(t) and diff(y(t),t)): ', 's');
        ode = str2sym(eqn);
        Dy = diff(y(t), t);
        D2y = diff(y(t),t,2);

        ivp_option = input('Do you want to provide initial conditions? (y/n): ', 's');
        if lower(ivp_option) == 'y'
            conds_input = input('Enter initial conditions as a cell array (e.g., {''y(0)=1'',''Dy(0)=0''}): ');
            conds = cellfun(@str2sym, conds_input, 'UniformOutput', false);
            conds = [conds{:}];
            result = solve_ode(ode, y, t, conds);
        else
            result = solve_ode(ode, y, t, []);
        end
        fprintf('Solution: %s\n', char(result));
    
    case 4
        disp('Running Example: RLC Circuit...');
        run('examples/example_rlc.m');
    
    case 5
        disp('Running Example: Mass-Spring-Damper...');
        run('examples/example_mass_spring.m');
    
    case 6
        disp('Running Example: Control System...');
        run('examples/example_control.m');
    
    case 0
        disp('Exiting Toolbox. Goodbye!');
end